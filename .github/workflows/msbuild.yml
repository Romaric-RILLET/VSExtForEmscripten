name: Visual Studio Extension for Emscripten

on:
  [ push, pull_request ]

jobs:

  build:

    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}
    runs-on: windows-2016  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: Emscripten.sln
      MSBuild_Path: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\bin"


    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Nuget
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: '5.x'

    - name: Cache Nuget packages 
      uses: actions/cache@v1
      id: cache
      with:
        path: ./packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.config') }}

    - name: Restore Nuget package
      if: ${{ !steps.cache.outputs.cache-hit }}
      run: nuget restore $env:Solution_Name
      
    - name: Build the application
      run: |
        Set-Item Env:Path "$env:MSBuild_Path;$env:Path"
        msbuild $env:Solution_Name /p:Configuration=Release
    
    - name: Save Bundles
      uses: actions/upload-artifact@v2
      with:
        name: VSExt-Emscripten
        path: .\Emscripten.Build.Definition\bin\Release\*.vsix    
 
  deploy:

    if: ${{ contains(github.ref, 'tags/v') }}
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Restore Bundles
        uses: actions/download-artifact@v2
        with:
          name: VSExt-Emscripten
          path: .

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

      - name: Upload Release Asset
        id: upload-build-support-package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Emscripten.Build.Definition.vsix
          asset_name: Emscripten.Build.Definition.vsix
          asset_content_type: application/vsix

      - name: Upload Release Asset
        id: upload-debugger-package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Emscripten.Debugger.vsix
          asset_name: Emscripten.Debugger.vsix
          asset_content_type: application/vsix
